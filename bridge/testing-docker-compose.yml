version: "3.7"
services:
  rabbitmq:
    image: "docker.io/rabbitmq:3.12-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticmq: # Drop-in SQS replacement
    image: "docker.io/softwaremill/elasticmq-native:1.5.7"
    ports:
      - "9324:9324"
      - "9325:9325"

  redis:
    image: "docker.io/redis:7-alpine"
    ports:
      - "6379:6379"

  gcp-pubsub:
    image: "gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators"
    ports:
      - "8085:8085"
    command:
      - "gcloud"
      - "beta"
      - "emulators"
      - "pubsub"
      - "start"
      - "--project"
      - "local-project"
      - "--host-port"
      - "0.0.0.0:8085"

  kafka:
    image: "ghcr.io/svix-mman/bitnami-kafka:3.5.1"
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka-data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_LOG_RETENTION_HOURS=336
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

volumes:
  kafka-data:
