version: "3.7"
services:
  postgres:
    image: "docker.io/postgres:13.4"
    command: postgres -c 'max_connections=500'
    volumes:
      - "postgres-data:/var/lib/postgresql/data/"
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  redis:
    image: "redis:7.0.10-alpine"
    ports:
      - "6379:6379"

  # Redis cluster
  redis-cluster:
    image: "docker.io/bitnami/redis-cluster:7.0.10"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: "redis-cluster redis-cluster-node-0 redis-cluster-node-1 redis-cluster-node-2 redis-cluster-node-3 redis-cluster-node-4"
      REDIS_CLUSTER_CREATOR: "yes"
      REDIS_CLUSTER_REPLICAS: "1"
    ports:
      - "6380:6379"
    depends_on:
      - redis-cluster-node-0
      - redis-cluster-node-1
      - redis-cluster-node-2
      - redis-cluster-node-3
      - redis-cluster-node-4

  redis-cluster-node-0:
    image: "docker.io/bitnami/redis-cluster:7.0.10"
    ports:
      - "6381:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: "redis-cluster redis-cluster-node-0 redis-cluster-node-1 redis-cluster-node-2 redis-cluster-node-3 redis-cluster-node-4"

  redis-cluster-node-1:
    image: "docker.io/bitnami/redis-cluster:7.0.10"
    ports:
      - "6382:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: "redis-cluster redis-cluster-node-0 redis-cluster-node-1 redis-cluster-node-2 redis-cluster-node-3 redis-cluster-node-4"

  redis-cluster-node-2:
    image: "docker.io/bitnami/redis-cluster:7.0.10"
    ports:
      - "6383:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: "redis-cluster redis-cluster-node-0 redis-cluster-node-1 redis-cluster-node-2 redis-cluster-node-3 redis-cluster-node-4"

  redis-cluster-node-3:
    image: "docker.io/bitnami/redis-cluster:7.0.10"
    ports:
      - "6384:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: "redis-cluster redis-cluster-node-0 redis-cluster-node-1 redis-cluster-node-2 redis-cluster-node-3 redis-cluster-node-4"

  redis-cluster-node-4:
    image: "docker.io/bitnami/redis-cluster:7.0.10"
    ports:
      - "6385:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_NODES: "redis-cluster redis-cluster-node-0 redis-cluster-node-1 redis-cluster-node-2 redis-cluster-node-3 redis-cluster-node-4"

  redis-sentinel:
    image: docker.io/redis:7
    ports:
      - "26379:26379"
    command: >
      sh -c 'echo "bind 0.0.0.0" > /etc/sentinel.conf &&
            echo "sentinel monitor master0 redis-master-0 6379 2" >> /etc/sentinel.conf &&
            echo "sentinel resolve-hostnames yes" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds master0 10000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout master0 10000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs master0 1" >> /etc/sentinel.conf &&
            redis-sentinel /etc/sentinel.conf'

  redis-master-0:
    image: docker.io/redis:7
    ports:
      - "6387:6379"

  redis-replica-0:
    image: docker.io/redis:7
    ports:
      - "6388:6379"
    command:
      - "redis-server"
      - "--appendonly"
      - "yes"
      - "--replicaof"
      - "redis-master-0"
      - "6379"
      - "--repl-diskless-load"
      - "on-empty-db"
      - "--protected-mode"
      - "no"

  rabbitmq:
    image: "docker.io/rabbitmq:3.11.13-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "xivs"
      RABBITMQ_DEFAULT_PASS: "xivs"
      RABBITMQ_PLUGINS_DIR: "/opt/rabbitmq/plugins:/usr/lib/rabbitmq/plugins"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbit/plugins:/usr/lib/rabbitmq/plugins

volumes:
  postgres-data:
  rabbitmq_data:
