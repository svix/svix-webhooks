// this file is @generated
#![allow(clippy::too_many_arguments)]

{% for _, type in api.types | items -%}
    pub mod {{ type.name | to_snake_case }};
{% endfor -%}

// not currently generated
pub mod message_events_out;
pub mod message_attempt_endpoint_out;
pub mod list_response_message_attempt_endpoint_out;
pub mod http_error_out;
pub mod http_validation_error;
pub mod validation_error;

pub use self::{
    {% for _, type in api.types | items -%}
        {% set type_name = type.name | to_upper_camel_case -%}
        {{ type.name | to_snake_case }}::{
            {{ type_name }},
            {% if type.kind == "struct_enum" and type.fields | length > 0 -%}
                {{ type_name }}{{ type.content_field | to_upper_camel_case }}
            {% endif -%}
        },
    {% endfor -%}
};

// not currently generated
pub use self::{
    message_events_out::MessageEventsOut,
    message_attempt_endpoint_out::MessageAttemptEndpointOut,
    list_response_message_attempt_endpoint_out::ListResponseMessageAttemptEndpointOut,
    http_error_out::HttpErrorOut,
    http_validation_error::HttpValidationError,
    validation_error::ValidationError,
};
