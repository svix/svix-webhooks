apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "svix.fullname" . }}-{{ .Values.pgbouncer.name }}
  labels:
    {{- include "svix.labels" . | nindent 4 }}
    app.kubernetes.io/component: pgbouncer
spec:
  replicas: {{ .Values.pgbouncer.replicaCount }}
  selector:
    matchLabels:
      {{- include "svix.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: pgbouncer
  template:
    metadata:
      labels:
        {{- include "svix.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: pgbouncer
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:13.4
          command: ['sh', '-c', 'until pg_isready -h {{ include "svix.fullname" . }}-{{ .Values.postgres.name }} -p 5432 -U postgres; do echo waiting for postgres; sleep 2; done; echo postgres is ready']
      containers:
        - name: {{ .Values.pgbouncer.name }}
          image: "{{ .Values.pgbouncer.image.repository }}:{{ .Values.pgbouncer.image.tag }}"
          ports:
            - name: pgbouncer
              containerPort: 5432
              protocol: TCP
          env:
            {{- range $key, $value := .Values.pgbouncer.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # Add environment variables like Docker Compose
            - name: DB_HOST
              value: "{{ include "svix.fullname" . }}-{{ .Values.postgres.name }}"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              value: "{{ .Values.postgres.env.POSTGRES_PASSWORD }}"
            - name: MAX_CLIENT_CONN
              value: "{{ .Values.pgbouncer.env.MAX_CLIENT_CONN }}"
          volumeMounts:
            - name: pgbouncer-config
              mountPath: /etc/pgbouncer/pgbouncer.ini
              subPath: pgbouncer.ini
              readOnly: true
            - name: pgbouncer-config
              mountPath: /tmp/userlist.txt
              subPath: userlist.txt
              readOnly: true
          livenessProbe:
            exec:
              command:
                {{- toYaml .Values.pgbouncer.healthcheck.command | nindent 16 }}
            initialDelaySeconds: 30
            periodSeconds: {{ .Values.pgbouncer.healthcheck.interval | replace "s" "" | atoi }}
            timeoutSeconds: {{ .Values.pgbouncer.healthcheck.timeout | replace "s" "" | atoi }}
            failureThreshold: {{ .Values.pgbouncer.healthcheck.retries }}
          readinessProbe:
            exec:
              command:
                {{- toYaml .Values.pgbouncer.healthcheck.command | nindent 16 }}
            initialDelaySeconds: 5
            periodSeconds: {{ .Values.pgbouncer.healthcheck.interval | replace "s" "" | atoi }}
            timeoutSeconds: {{ .Values.pgbouncer.healthcheck.timeout | replace "s" "" | atoi }}
            failureThreshold: 3
      volumes:
        - name: pgbouncer-config
          configMap:
            name: {{ include "svix.fullname" . }}-pgbouncer-config